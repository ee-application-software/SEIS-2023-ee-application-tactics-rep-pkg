ID,Title,Tactic Employed,Tactic Environment,Tactic Category,"Tactic Type (Measurement, Refactoring, Implementation Tactic)","Abstraction Level (Architectural, Design, Code)","Platform (Agnostic, Workstation, Cloud, Mobile)","Software Development Stage (Requirements, Design, Implementation, Verification, and Maintenance)",,,,,,,,,,,
2GN8KRRP,Model-based energy efficiency analysis of software architectures,"Paper proposes a technique to measure the energy consumption of a software system at the architectural level. It does so by modeling a software system as a component-based architecture, and creating definitons of behavior and power consumption of the components, as well as presenting different views that map the energy consumption of the components to the deployment environment and usage.",Dynamic,Monitoring,Dynamic Measurments,Architectural,Agnostic,Verification,,,,,,,,,,,
2UXA9MJ2,An investigation into energy-saving programming practices for android smartphone app development,"Paper analyzes energy efficiency best practices found in the official Android's developers website.  The paper finds that sending larger files is more energy efficient than sending smaller files, high energy consumption increases energy consumption but only by a small amount, and that avoiding references to array length in a loop reduced energy by 10%, Staticinvocations consumed 15% less energy than virtual invocations, and direct field accesses used 30-35% less energy than indirect getter and setter methods.",Static,Optimization,"Energy efficient code, HTTP bundling,  Energy Efficiency Best Practices ",Code,Agnostic,Implementation,,,,,,,,,,,
32N22PF9,"Software-based energy profiling of android apps: Simple, efficient and reliable?","Paper investigates the accuracy difference between hardware and software energy consumption measuring tools. They propose a measuring software called Petra, for Android OS that measures energy consumption at the method level.",Dynamic,Monitoring,"Estimation, Software Based Measurements, Testing",Code,Mobile,Verification,,,,,,,,,,,
37QLWH7J,Green software requirements and measurement: random decision forests-based software energy consumption profiling,"Paper introduces green requirements that concern the direct negative impact of software and that are specified as software quality attributes as well as a tool that measures the software quality attributes adopted. The requirements are green computation efficiency, green data management, green data communication, and energy consumption awareness. To measure whether these requirements are met, the authors propose an energy consumption model based on machine learning that estimates the impact of a particular software application on the energy consumption of the device rather than determining the energy usage of the whole device.",Dynamic,Monitoring,"Requirements Engineering, Machine Learning Modeling, Measuring",Architectural,Agnostic,Verification,,,,,,,,,,,
37QLWH7J,,,Static,Optimization,,Architectural,Agnostic,Requirements,,,,,,,,,,,
39G59GN3,Leafactor: Improving energy efficiency of android apps via automatic refactoring,Paper proposes an automatic refactoring tool that detects the following code smells at a coding level DrawAllocation: Allocations within drawing logic. WakeLock: Incorrect wake lock usage. Recycle: Failing to release singleton resources. ObsoleteLayoutParam: Unnecessary layout parameters. ViewHolder.,Static,Optimization,"Energy Refactoring, StaticOptimization, Automatic Refactoring ",Code,Mobile,Maintenance,,,,,,,,,,,
3BCM2CIS,A preliminary study of the impact of software engineering on greenit,"Paper proposes to gather applications energy feedback information at runtime and with similar accuracy as hardware equipments while using only a software approach. They do so based on a system monitoring library (at the operating system level), called POWERAPI which estimates the energy consumption of running processes, in real-time, based on raw information collected from hardware devices.",Dynamic,Monitoring,"Process Measuring, Hardware Components Consumption, Testing",Architectural,Workstation,Verification,,,,,,,,,,,
3DSC22RI,Towards a green ranking for programming languages,Paper ranks the energy efficiency of several programming languages and proposes the C language as both the fastest and greenest language.,Static,Optimization,"Programming Languages, Language Benchmarking",Architectural,Agnostic,Design,,,,,,,,,,,
3EL5YH3B,Mobile device power models for energy efficient dynamic offloading at runtime,"Paper proposes a model that estimates the mobile energy consumption of an application that takes into account the CPU, display, wireless network interface, and memory. This model then allows a mobile application to be executed in the cloud, locally, or in a hybrid approach. The authors then present a method to offload parts of an application at runtime based on the model estimations. ",Dynamic,Monitoring,"Computational Offloading, Energy Consumption Model, Hardware Component Measuring",Architectural,Mobile,Verification,,,,,,,,,,,
3EL5YH3B,,,Dynamic,Optimization,,Code,Mobile,Design,,,,,,,,,,,
3ENRR9HW,Green web services: Modeling and estimating power consumption of web services,Paper proposes a predictive model that can be created at design time but leveraged by service composition systems at runtime. This way web services can use dynamic power estimation information and decision support at runtime.,Static,Monitoring,"Energy aware computing, measuring",Architectural,Cloud,Design,,,,,,,,,,,
3ENRR9HW,,,Dynamic,Optimization,,Architectural,Cloud,Design,,,,,,,,,,,
44E3X95Z,,,Dynamic,Monitoring,,Architectural,,Verification,,,,,,,,,,,
44E3X95Z,Earmo: An energy-aware refactoring approach for mobile apps,"Paper performs an empirical study on the energy consumption of anti-patterns, it develops a technique to measure the energy consumption of mobile applications, proposes an automatic refactoring technique to improve the design quality of source code while preserving energy efficiency, and perform a study on the efficacy of earmo among mobile application developers. The paper finds that removing Binding resources too early, Private getters and setters, Refused Bequest, and Lazy class anti-patterns can improve energy efficiency in some cases.",Static,Optimization,"StaticOptimization, Design Pattern Refactoring, Dynamic Measuring, Power Measuring, Automatic Refactoring",Design,Mobile,Implementation,,,,,,,,,,,
44IANVHH,Managing the energy-delay tradeoff in mobile applications with tempus,"Paper proposes Tempus, a framework that saves power by enabling programmers to annotate power-hungry operations of continously running mobile applications with states that specify when the operation can be executed to save energy. Through tempus, developers assign a budget to operations and energy policies that spend the budget at different rates, allowing developers to balance energy efficiency and quality of service.",Dynamic,Optimization,"Dynamic Optimization, Energy Aware Computing",Code,Mobile,Design,,,,,,,,,,,
48433ESM,Evaluating the impact of code smell refactoring on the energy consumption of android applications,"Paper investigates the influence of code smell refactoring on Android Open Source Apps. The paper finds that for some applications, applying the Duplicated Code and Type Checking refactorings reduced energy consumption up to 10%.",Static,Optimization,Code Refactoring,Code,Mobile,Maintenance,,,,,,,,,,,
4A3AGUKH,A comprehensive study on the energy efficiency of java’s thread-safe collections,"Paper analyzes thread safe implementations of Java collections to find if different implementations of the same collection and the same methods of different implementations have different energy consumption. The authors find that small changes in implementation can make a huge difference in the energy consumption of an application. In particular, they find that the latest versions of thread safe collections are the most energy efficiency in most cases, and scale up the best when compared to the old versions. The latest thread safe collections scale up comparably to the unsafe collections.",Static,Optimization,"Energy Efficient Data Structures, Multithreading Energy Efficiency",Code,Agnostic,Implementation,,,,,,,,,,,
4GW9NRNL,Estimating mobile application energy consumption using program analysis,Paper proposes a measuring tool that can estimate software energy consumption at the code level. It does so by using both static analysis of the source code and per instruction energy modelling.,Static,Monitoring,"Energy estimation, Program Analysis, Static Analysis",Code,Mobile,Verification,,,,,,,,,,,
4KGZLD99,Calculating source line level energy information for android applications,Paper proposes a measuring framework that allows for calculating source line level energy information for android applications by using hardware energy models and static analysis.,Static,Monitoring,Measuring,Code,Mobile,Verification,,,,,,,,,,,
4MWD3GI2,Manageable granularity in mobile application code offloading for energy savings,Paper proposes an offloading strategy for mobile web browsers which separates an applications code into computational and UI related modules and offloads computational modules to the cloud while running the UI related code locally.,Static,Optimization,"code offloading, workload partitioning",Architectural,Mobile,Design,,,,,,,,,,,
4S65RXRF,Green mining: a methodology of relating software change and configuration to power consumption,"Paper proposes a methology to estimate the impact software evolution (changes through commits) has on energy consumption, and give recommendations based on the softwares versioning history. The authors find that the energy efficiency of software across version does change, but they note that more research is needed to know why. The authors also analyze correlations between object oriented software metrics such as added lines, removed lines, lines of code, and churned lines and energy consumption. However, they test for correlation in a relatively small section of code (commit level) and thus they are not able to consistently find a correlation between the software metrics and energy consumption.",Static,Monitoring,"Software Metrics, Energy Though Software Evolution",Design,Agnostic,Verification,,,,,,,,,,,
4S65RXRF,,,Static,Monitoring,,Code,Agnostic,Verification,,,,,,,,,,,
55EMQ48G,Impacts of software and its engineering on the carbon footprint of ICT,"Paper proposes measuring the energy efficiency of software during the CI cycle. They propose a strategy, based on well-known software testing approaches and CI, to take energy efficiency into account during the daily work of a software developer.",Dynamic,Monitoring,CI/CD Measuring,Code,Agnostic,Verification,,,,,,,,,,,
57QF6PCN,,,Dynamic,Monitoring,,Code,Cloud,Verification,,,,,,,,,,,
57QF6PCN,A green software development life cycle for cloud computing,Paper identifies energy-saving opportunities in a typical SDLC process to help build more environment-friendly software applications for the cloud.,Static,Optimization,Energy Efficient SDLC,"Architectural, Design, Code",Cloud,"Requirements, Design, and Implementation",,,,,,,,,,,
59HNH3FK,Evaluation of Software Product Quality Attributes and Environmental Attributes using ANP Decision Framework.,"Paper extends their previously proposed ANP framework, a multi-criteria decision making (MCDM) approach that incorporates multiple objectives for prioritizing conflicts, to include energy efficiency requirements by defining sub-criteria of quality and environmental criteria. This framework helps developers designing software systems to prioritize between possible conflicting functional and quality requirenments and energy efficiency.",Static,Optimization,Software Development Process Tactics,Architectural,Agnostic,Requirements,,,,,,,,,,,
59ILI6BA,EnerJ: Approximate data types for safe and general low-power computation,"Paper proposes EnerJ, an extension to Java both safe and general, that adds approximate and precise data types. Paper also provides endorsements, which are programmer-specified points at which approximate-to-precise data flow may occur. Paper also provides simulations of a runtime and hardware to run this approximate version of Java.",Dynamic,Optimization,"Programming Languages, Hardware/software interfaces, Approximate Programming",Architectural,Agnostic,Design,,,,,,,,,,,
5FAZY5KA,Impact of developer choices on energy consumption of software on servers,"Paper shows how different I/O APIs'  regarding reading, copying, compressing, and decompressing can influence the energy consumption of application software's energy efficiency. Paper finds that the buffer size highly impact the energy efficiency of the APIs, and that APIs energy efficiency only varies if different buffer sizes are chosen. Paper also finds that specifying a buffer size is more energy efficient than using a fixed buffer size. The paper also proposes a power model to estimate the energy consumption of i/o operations based on the buffer size.",Static,Optimization,"StaticOptimization, I/O optimzation, Energy Model, StaticMeasurements, Software Metrics",Code,Agnostic,Implementation,,,,,,,,,,,
5IT56E4B,Energy Efficiency Analysis of Code Refactoring Techniques for Green and Sustainable Software in Portable Devices,Paper analyzes the energy consumption and maintainability improvement of combining code-level refactorings through an application's code both in mobile and desktop.,Static,Optimization,"Code Refactoring, Combining Code Refactoring Techniques",Code,"Workstation, Mobile",Maintenance,,,,,,,,,,,
5IT56E4B,,,Static,Optimization,,Code,Mobile,Maintenance,,,,,,,,,,,
6PR46JX3,The software perspective for energy-efficient mobile applications development,Paper proposes a guideline to measure the energy consumption of software mobile applications both at the application level and at the code level.,Dynamic,Monitoring,"Dynamic Measurement, Application Level Measurement, Code Level Measurement",Architectural,Mobile,Verification,,,,,,,,,,,
6PR46JX3,,,Dynamic,Monitoring,,Code,Mobile,Verification,,,,,,,,,,,
6RUTHNIE,Haskell in green land: Analyzing the energy behavior of a purely functional language,"Paper adapts two measuring frameworks, Criterion and the GHC Profiler for the Haskell programming language to measure energy consumption. They then use the different profilers to measure the energy consumption of different implementation choices in Haskell. The authors find that thread management construct, such as using MVar over TMVar, highly affects the energy consumption of a multithreaded application. The paper also finds that performance does not equal energy savings",Dynamic,Monitoring,"Code Optimization, Data Structure Optimization, Multithreaded Management Optimization, Measurment Framework",Code,Agnostic,Verification,,,,,,,,,,,
6RUTHNIE,,,Static,Optimization,,Code,Agnostic,Implementation,,,,,,,,,,,
6VBJLJ6V,EARLY ANALYSIS OF SOFTWARE ARCHITECTURE TO ESTIMATE ENERGY CONSUMPTION IN ANDROID PLATFORM,Paper analyzes the energy consumption difference between a server-centric and a mobile-centric architecture.,Static,Optimization,,Architectural,Mobile,Design,,,,,,,,,,,
7EBBEQTC,Automated re-factoring of android apps to enhance energy-efficiency,"Paper proposes re-factoring technique that can assist in energyaware app development. Their technique relies on a set of energy efficiency guidelines that encodes the optimal usage of energy intensive hardware resources in an app. To do this, the framework generates an intermediate, succinct representation of the app which contains only the most important information for the application. The framework also generates a defect expression but presents the negation of an energy-efficiency guideline, basically what the app has to do to waste energy. A non-empty intersection between design-expression and defect-expression indicates violation of the energy-efficiency guideline that is associated with the defect-expression.",Static,Optimization,"Refactoring, StaticAnalysis ",Design,Mobile,Maintenance,,,,,,,,,,,
7FV8X9PI,Performance events based full system estimation on application power consumption,"Paper proposes measuring the energy consumption of software on different hardware components by creating a machine learning model that predicts the energy consumption of an application type (computation intensive, memory-intensive) by using performance events (cache misses, active cycles) as predictors of energy consumption. They do this by first runnning micro-benchmarks on hardware components to find how different performance events of different types of applications affects their energy consumption. Once the authors find the related performance events, they create a model that predicts the energy consumption throughout the whole system.   ",Dynamic,Monitoring,"Software Measuring, Perfomance Events, Dynamic Measuring",Architectural,Agnostic,Verification,,,,,,,,,,,
7IFZJFLT,,,Dynamic,Monitoring,,Code,Agnostic,Implementation,,,,,,,,,,,
7IFZJFLT,Search-based energy optimization of some ubiquitous algorithms,"Paper presents Opacitor, a bytecode level energy profiler for programs running on the JVM. The authors then use opacitor to create energy effcient versions of quicksort and objet-oriented classes and achieve 70% and 39.85% energy savings respectively. The authors do so by applying genetic improvement algorithms to the implementations of quicksort and the Google Guava OO library to generate more energy efficient versions. In addition, the authors propose using Automatic Differentiation in the training and validation of a multilayer perceptron to vary energy consumption vs accuracy of prediction.",Static,Optimization,"Search Based Software Engineering Optimization, StaticOptimization, Measurement, Bytecode Level Measurements, Energy Model, Java opcode measuring, Machine Learning Training Optimization",Code,Agnostic,Implementation,,,,,,,,,,,
7WF3N24V,A programming environment with runtime energy characterization for energy-aware applications,"Paper presents a programming environment to ease the construction of energy-aware applications. Programs in this runtime may use ""options"" which are different ways to achieve desired functionalities and choose the most energy effcient option.",Dynamic,Optimization,"Energy aware application, Programming environment",Architectural,Workstation,Design,,,,,,,,,,,
85U3NXXL,Greenbundle: an empirical study on the energy impact of bundled processing,"Paper analyzes the energy-efficiency of the model-view-controller architectural pattern vs the model-view-presenter architectural pattern with event bundling in mobile applications. An event can be a database update request, a packet transmission request, a view update request. By bundling these events and processing them all at once applications can save significant energy compared to the non-bundled version.",Static,Optimization,"Energy Efficient Architectural Patterns, Event Bundling",Architectural,Mobile,Design,,,,,,,,,,,
8EAS3MJ2,Exploiting significance of computations for energy-constrained approximate computing,"Paper presents a programming model that allows developers to structure the computation in different tasks, and to express the relative importance of these tasks for the quality of the end result, for less important tasks, the programmer can specify an approximate version.",Dynamic,Optimization,Approximate Computing,Architectural,Workstation,Implementation,,,,,,,,,,,
8JBIUZ3B,Melta: A method level energy estimation technique for android development,Paper proposes a method to measure energy efficiency at a method level. The paper does this by generating an energy consumption model by mapping the voltage and current readings onto the execution time of each method.,Dynamic,Monitoring,"StaticAnalysis, Method Level Energy Measurement",Code,Mobile,Verification,,,,,,,,,,,
8JYDG2EY,Reducing energy consumption using genetic improvement,"Paper proposes using a genetic improvement algorithm to improve subtle code design decisions such as introducing inline methods, swapping API implementations, and constructing semantically equivalent (but structurally inequivalent) algorithms to increase the energy efficiency of applications.",Static,Optimization,"Genetic Improvement, Search Based Software Optimization,",Code,Agnostic,Implementation,,,,,,,,,,,
8Z4FJ9KZ,Variability models for generating efficient configurations of functional quality attributes,"Paper propses a method to automatically generate optimum configurations of functional quality attributes in terms of energy efficiency for a specific application. The authors also present a characterization of functional quality requirements in terms of operations (encrypt/decrypt), contextual variables (e.g., the size of the object to be encrypted), configurable parameters (e.g., different algorithms), and implementations (e.g., existing framework and libraries), and the corresponding usage model for each FQA that includes all this information so it can be instantiated in the applications. ",Static,Optimization,Functional Quality Attribute Optimization,Architectural,Agnostic,Design,,,,,,,,,,,
92K5Z6UT,Inheritance versus delegation: Which is more energy efficient?,Paper proposes replacing delegation by inheritance in order to increase the energy efficiency of an application.,Static,Optimization,"Refactoring, Design Patterns, StaticOptimization",Design,Agnostic,Maintenance,,,,,,,,,,,
95RQKDX5,,,Dynamic,Monitoring,,Architectural,Mobile,Verification,,,,,,,,,,,
95RQKDX5,Saving Energy on Mobile Devices by Refactoring.,"Paper proposes a refactoring process to eliminate the energy code smells of an application. It does so by first analyzing the source code of an application, generating a metamodel, eliminating energy code smells in the application, and unparsing the model into source code. It then proposes to perform an evaluation on the re-written applications to find the energy percentage saved.",Static,Optimization,"Refactoring, StaticCode Analysis","Design, Code",Mobile,Maintenance,,,,,,,,,,,
98DNPTFE,Towards an Energy-Consumption Based Complexity Classification for Resource Substitution Strategies.,"Paper proposes an energy consumption complexity classification simialr to the computational complexity of algorithms in which developers can measure the energy consumption of an application by the CPU, memory access, and network usage. The authors then propose a dynamic scheduling framework that decides the best exectution environment at an application's runtime.",Dynamic,Optimization,"Dynamic Optimization, Energy Consumption complextiy",Architectural,Mobile,Design,,,,,,,,,,,
9HVUQKK3,The power of system call traces: predicting the software energy consumption impact of changes.,Paper proposes an energy consumption measuring tool by relating software change to energy consumption by tracing the changes in an application’s pattern of system call invocations.,Dynamic,Monitoring,"Measuring,  System Calls, Testing",Architectural,Mobile,Verification,,,,,,,,,,,
AAPZ4E7T,"Energy efficiency across programming languages: how do energy, time, and memory relate?","Paper analyzes the energy consumption of programming languages compared to their execution time and memory consumption. They then provide a pareto-optimal pairing between programs based on the needs of the application (energy efficiency, execution time, memory consumption)",Static,Optimization,Programming Language Benchmarking,Architectural,Agnostic,Design,,,,,,,,,,,
AWARRYWE,Evaluating the Impact of Java Virtual Machines on Energy Consumption,"Paper evaluates different JVM versions and configurations (garbage collector, multithreading, JIT) and makes recommendations on choosing the best JVM for energy efficiency. It also proposes an open source application that recommends the best JVM distribution and configuration based on an application. Paper also provides guidelines on how to best configure the JVM environment for energy efficiency.",Static,Optimization,"Runtime environments, environment configuration",Architectural,Agnostic,Design,,,,,,,,,,,
AZHT26VR,Energy optimization in Android applications through wakelock placement,"Paper proposes placing the wakelock acquire and release function calls at appropriate positions in the application depending on the usage of an application. This way, overutilization can be avoided by not placing the wakelock to early, or by placing a useless wakelock.",Static,Optimization,"Data Flow Analysis, Wakelock Placement",Code,Mobile,Implementation,,,,,,,,,,,
BAEDN8AK,Automated energy optimization of http requests for mobile applications,"Paper proposes to bundle HTTP requests in mobile applications to save energy. They do this by performing Staticanalysis on the applicaiton code to find bundable requests, then they perform string analysis on to identify relations between bundles, and configure a set of bundling rules, and then to use a proxy server at runtime that automatically detects the start of a series of bundable HTTP requests and performs the optimizations.",Static,Optimization,"HTTP Request Bundling, StaticCode Analysis, Code Optimization",Code,Mobile,Implementation,,,,,,,,,,,
BCGVNHPS,Energy-efficient multisite offloading policy using Markov decision process for mobile cloud computing,"Paper proposes a framework to dynamically offload data intensive and comptation intensive tasks to different cloud servers depending on the energy savings of each server. For example, mobiles can offload the computational intensive modules to a server that is close to the mobile, and data intensive modulea can be offloaded to a server that is close to the database.",Dynamic,Optimization,Computational Offloading,Architectural,Mobile,Design,,,,,,,,,,,
BKJYESRW,Green software: Refactoring approach,"Paper proposes refactoring as shows that energy code smells are correlated to the energy consumption of an application, and that refactoring improves the energy consumption of an application.",Static,Optimization,Refactoring,"Design, Code",Mobile,Maintenance,,,,,,,,,,,
BKJYESRW,,,Static,Optimization,Refactoring,Design,Mobile,Maintenance,,,,,,,,,,,
CIQNDCVP,Detecting energy bugs and hotspots in mobile apps,Paper presents an automatic test generator that simulates users' inputs and allows to discover energy hostspots/bugs. Each generated test suite represents a user interaction scenario that leads to an energy hotspot. The paper also defines energy bugs for mobile applications,Dynamic,Monitoring,Acceptance Testing,Design,Mobile,Verification,,,,,,,,,,,
D8RELEFX,Mining energy-greedy api usage patterns in android apps: an empirical study,"Paper explores how uses and misuses of Android's energy-greedy method calls and API usage patterns (wakelock, sensor data requests can lead to energy bugs. The paper finds that APIs related to gui and image manipulation and database usage are the most energy consuming APIs in the android system. Finally, the authors propose energy efficiency tactics for mobile applications that deal with these APIs",Static,Optimization,"Code Optimization, Design Pattern Optimization",Design,Mobile,Implementation,,,,,,,,,,,
D8RELEFX,,,Static,Optimization,,Code,Mobile,Implementation,,,,,,,,,,,
DJW8RCH4,"Comparing REST, SOAP, Socket and gRPC in computation offloading of mobile applications: An energy cost analysis","Paper alayzes different architectural styles to offload computations to the cloud including SOAP, REST, Socket, and gRPC, and finds that REST and websocket are the most energy efficient computation offloading communication protocols, and that computational offloading can improve the energy efficiency of an application up to ten times",Static,Optimization,Computational Offloading,Architectural,Mobile,Design,,,,,,,,,,,
DQRV7XAC,Refactoring android java code for on-demand computation offloading,Paper proposes an automatic refactoring tool to introduce computational offloading to mobile applications,Static,Optimization,"Refactoring, Computational Offloading",Design,Mobile,Maintenance,,,,,,,,,,,
DVMM6IHF,Self-adaptive battery and context aware mobile application development,"Paper proposes a self adaptive mobile application framework that changes the application's behavior, UX, optimizing resource usage, and performance depending on the available battery and context such as travelling.",Dynamic,Optimization,"Energy Aware Application, Self-Adaptive Application",Architectural,Mobile,Implementation,,,,,,,,,,,
E5PP5MNY,Enforcing green code with Android lint,"Paper extends the android lint tool to with green checks to show energy hotspots in code. Paper first analyzes 11 energy bugs, and then extends the Android Lint tool to detect tha analyzed bugs. Paper also analyzes different  energy bugs ",Static,Optimization,"StaticAnalysis, Energy Bug Refactoring",Code,Mobile,Implementation,,,,,,,,,,,
EEA62K47,Characterizing the performance and energy efficiency of lock-free data structures,"Paper investigates the difference in energy efficiency of lock-free and locking data structures. They do so by implementing a locking and lock-free version of a fifo channel, a queue, and a linked list. The paper finds that most of the time lock-free implementations are more energy efficient than their locking counterparts.",Static,Optimization,"Lock-free Data-structures, Locking Data-structures. Data-structure optimization, Concurrency, Multithreading",Code,Agnostic,Implementation,,,,,,,,,,,
EQ8JEST9,Self-adaptive energy-efficent applications: the hadas developing approach,"Paper proposes a framework in which developers specify energy concerns which are used to model the energy consumption and energy hotspots of an application at design time. At design time, different variations of the application are modeled and stored in a green repository, which allow developers to consider the energy efficiency of all the application variations at design time. These models furthermore allow the developer to create self-greening rules that will trigger a reconfiguration at runtime depending on initialization variables like input size.",Dynamic,Optimization,"Energy aware reconfiguration, Energy Hotspot Identification, Design Self-adaptation, Strategy Repository",Design,Agnostic,Design,,,,,,,,,,,
ESMRAFHG,Comparing the Energy Consumption of Java I/O Libraries and Methods,"Paper analyzes the energy consumption of Java I/O APIs on their energy consumption. The authors then propse guidelines on what are the best I/O methods depending on the requirements (reading, writing, read all data). The paper finds that the nio.FileChannel is the most efficient I/O interface, providing savings of 10-20%. Choosing the wrong buffer size (too big, too small) for data tends to lead to energy inefficiency, For writing data, GUAVA or NIOF should be avoided. The authors also find that replacing energy inefficient I/O methods improves the I/O consumption of application up to 30%",Static,Optimization,StaticOptimization,Code,Agnostic,Implementation,,,,,,,,,,,
EUGXAZQP,Exploring evolutionary search strategies to improve applications’ energy efficiency,Paper proposes using different genetic algorithms to explore software developers’ high level decisions that improve an application’s energy usage. To do so they extend the SEEDS approach to use a genetic algorithm instead of an exhaustive search.,Dynamic,Optimization,"Genetic Improvement, Search Based Refactoring, StaticOptimization",Code,Agnostic,Implementation,,,,,,,,,,,
F75EJ3E3,Towards power reduction through improved software design,"Paper proposes a method to map software design to energy consumption. They do so by using an FPGA board to simulate a computer system, and then use the boards real time power monitor to indicate when specific code sequences start and stop executing.",Dynamic,Monitoring,Software Design,Code,Agnostic,Verification,,,,,,,,,,,
F7RAFTPT,GREEN MOBILE APPLICATION DEVELOPMENT THROUGH SOFTWARE LOCALIZATION,"Paper proposes using localization, making different languages accessible to users, to increase the energy efficiency of an application. In the authors opinion, the usage time of applications with localization will be shorter, and users will not have to use other services to translate the application which might increase the energy consumption.",Static,Optimization,Energy Efficiency Through Localization,Architectural,Mobile,Requirements,,,,,,,,,,,
G3L58GAT,Data-oriented characterization of application-level energy optimization,"Paper investigates how the choice of application-level data management features impact energy consumption. To do so, they investigate how data access patterns, data organization and representation, data precission and data i/o strategies impact the energy consumption of an application. Paper finds that random access, object-centric data organization, unbuffered I/O consume significantly more energy. The energy consumption for memory read and write are on par, but file write is significantly more expensive than file read. The paper also presents the jRAPL measuring tool that can measure energy consumption at a code level.",Static,Optimization,"StaticOptimization, Code Level Measurement, Dynamic Measurements",Code,Agnostic,Implementation,,,,,,,,,,,
G3L58GAT,,,Dynamic,Optimization,,Code,Agnostic,Implementation,,,,,,,,,,,
G4AEGEBJ,,,Static,Monitoring,,Code,Mobile,Verification,,,,,,,,,,,
G4AEGEBJ,A source-level energy optimization framework for mobile applications,"Paper proposes an energy optimization framework guided by a source code energy model that allows developers to be aware of energy usage induced by code and to apply targeted source-level refactoring strategies. The authors first employ the energy model created to identify the most energy consuming methods of an application, then they choose the strategy needed to refactor the methods, and perform an evaulation of the refactored code.",Static,Optimization,"Refactoring, StaticAnalysis, Source Code Measuring",Code,Mobile,Maintenance,,,,,,,,,,,
G5W86TY3,Extending software architecture views with an energy consumption perspective,"Paper introduces an energy consumption perpective on software architecture design following the detailed format and viewpoint catalog described by Rozanski and Woods including: the applicability to views through key questions, concerns that can be addressed, activities for application and architectural tactics. The authors also position sustainability as a quality attribute following the ISO 25010 format and define subattributes which include several energy consumption focsued attributes.",Static,Optimization,"Energy Consumption Architectural Perspective, Perspective Activities, Green Architectural Tactics",Architectural,Agnostic,"Requirements, Design",,,,,,,,,,,
G9ZC4CU8,"Android app energy efficiency: The impact of language, runtime, compiler, and implementation","Paper proposes the Android Energy Profiler (AEP) to measure the detailed power consumption of various Android apps. The paper also compares several languages, runtimes, and implementation decisions based on their energy efficiency. Paper finds that C++ is 11 times more energy efficient than Java, while C is only marginally more efficient than C++. It suggests Android developers to avoid the stack to improve performance and to use parallel code when possible to increase the energy consumption of applications. For Android runing ART, the difference between Java and native code is neglible. Interestingly, the paper finds that the thin client design may not be the most energy-efficient solution.",Dynamic,Monitoring,"Application Measuring, Progamming Language Benchmark, Runtime Benchmark, Code Optimization",Architectural,Mobile,Verification,,,,,,,,,,,
G9ZC4CU8,,,Static,Optimization,,Architectural,Mobile,Design,,,,,,,,,,,
G9ZC4CU8,,,Static,Optimization,,Code,Mobile,Implementation,,,,,,,,,,,
GXRX9RTC,Investigation for Software Power Consumption of Code Refactoring Techniques.,Paper analyzes different refactoring techniques from M. Fowler and their impact on energy consumption. It then presents a set of refactorings that can increase the energy efficiency of software.,Static,Optimization,"Code Refactoring,StaticOptimization",Code,Agnostic,Maintenance,,,,,,,,,,,
H6BXP35P,Ape: An annotation language and middleware for energy-efficient mobile application development,Paper proposes an annotation and middleware framework for mobile applications where programmers can specify which are the most power hungry sections of code. The execution of the annotated code is deferred until the mobile device enters a state that minimizes energy consumption. This relieves the developer from working with multithreading and hardware scheduling directly.,Dynamic,Optimization,"Energy aware computing, code annotation, context aware",Code,Mobile,Implementation,,,,,,,,,,,
IHN8YLLL,An empirical study of the energy consumption of android applications,"Paper investigates several questions regarding the energy consumption of mobile applications. The authors consider wich types of applications spend the most energy, what states of an application consume the most energy (idle, api-idle,non-idle), which code consumes more energy API calls or developer written code, how much energy is consumed by different components of a smartphone, which api calls consume the most energy, how much energy does loops consume, is time equal to energy, the correct granularity to measure energy and whether only measuring non-idle energy consumption accurately measures the total energy consumption of an application. The authors find that idle time consumes more energy than non-idle time, and that measuring only non-idle time does not accurately measures the total energy consumption of an application. The paper also finds that the most energy consuming component of a smartphone is the networking, and that optimization efforts must be focused on this area.",Static,Optimization,"StaticAnalysis, Code Optimization",Code,Mobile,Implementation,,,,,,,,,,,
IL5CDLN3,Anole: a case for energy-aware mobile application design,Paper proposes a framework that exposes a set of APIs and adaptation policies so that programmers can define energy states and set the application to different energy states when a specific energy event is triggered. The framework then triggers the applications and system to change to different power states when certain energy events happen. The framework also exposes api interfaces to let the end user costumize the adaptation settings.,Dynamic,Optimization,"Energy adaptation, Energy Aware Programming, Dynamic Optimization",Architectural,Mobile,Design,,,,,,,,,,,
ILXTNC4I,Studying energy trade offs in offloading computation/compilation in java-enabled mobile devices,Paper proposes an offloading framework targeting the Java language that dynamically decides whether computations should be performed locally or in the cloud. The framework leverages Java's object serialization feature to allow offloading of both method execution and bytecode-to-native code compilation to the server when executing a Java application.,Dynamic,Optimization,Computational Offloading,Code,Mobile,Design,,,,,,,,,,,
ISZGIP3F,SPELLing out energy leaks: Aiding developers locate energy inefficient code,"Paper proposes a technique to detect energy inefficient fragments in the source code of a software system. The paper does so by testing the software through tests, correlating the energy consumed to source code fragments via spectrumbased fault localization, and performing an energy grading of source code fragments.",Dynamic,Monitoring,"Energy Testing, Unit Testing, Dynamic Measurements",Code,Agnostic,Verification,,,,,,,,,,,
IWFUWMJD,Investigating Energy and Security Trade-offs in the Classroom with the Atom ${$LEAP$}$ Testbed,"Paper proposes the Atom Leap measurment tool that allows to measure the energy consumption of sections of code in an application. This way, developers can estimate the energy efficiency of parts of their code and create energy aware applications.",Dynamic,Monitoring,"Component Level Measuring, Hardware Consumption Measuring, Energy Aware Computing, Code Section Measuring",Code,Mobile,Verification,,,,,,,,,,,
JRTZZRR6,Environmental Sustainability Coding Techniques for Cloud Computing,Paper porposes to add a parameterized development phase to enhance the energy efficiency of cloud application software. The parameterized phase provides guidelines and appropriate methodologies for developers to increase the energy efficiency of software at the implementation phase.,Static,Optimization,"SDLC, Parametized Phase","Design, Code",Cloud,"Design, Implementation",,,,,,,,,,,
JZINRXHH,"Using the Greenup, Powerup, and Speedup metrics to evaluate software energy efficiency",Paper provides accurate metrics to measure the energy consumption vs performance of algorithms. It does so by introducing the speedup and greenup and powerup metrics. Speedup measures the optimization increase of optimized code vs non-optimized code. Greenup measures the energy increase of the optimized code vs the non-optimized code. Powerup measures the ratio between speedup and greenup in an algorithm. They also provide optimization scenarios based on the metrics and how to obtain them.,Dynamic,Monitoring,"Dynamic Software measuring, software optimiztion",Architectural,Agnostic,Verification,,,,,,,,,,,
JZINRXHH,,,Static,Optimization,,Design,Agnostic,Implementation,,,,,,,,,,,
JZINRXHH,,,Static,Optimization,,Code,Agnostic,Implementation,,,,,,,,,,,
K2EMKWMY,Accurate online power estimation and automatic battery behavior based power model generation for smartphones,"Paper proposes a system level measuring framework that creates different energy consumption models for different hardware components depending on the phone used. However, they find that between different phone manufacturers and models, the per hardware energy consumption varies significantly. Hence, they cannot use this model in a generalized setting. The authors then present an energy model that can estimate system level power consumption based on battery usage. They then present PowerTutor, an app that lets developers measure the energy consumption changes of different phone components throughout software changes. ",Dynamic,Monitoring,"Dynamic Analysis, Runtime Measurements, Energy Models",Architectural,Mobile,Verification,,,,,,,,,,,
K5C2XV33,Energy profiles of java collections classes,"Paper analyzes the difference in energy consumption of different Java Collection classes to create per-method (insertion, iteration, random access) energy consumption profiles of each collection to provide a guide for software developers to choose the right collection depending on the context. The authors then present guidelines on which collection implementations to use depending on the context and input size.",Static,Optimization,"StaticOptimization, Code Optimization",Code,Agnostic,Implementation,,,,,,,,,,,
KSR7NJ2X,A study of the energy consumption of databases and cloud patterns,Paper evaulates the energy consumption of cloud patterns and databses and makes recommendations on design patterns that increase energy efficiency.,Static,Optimization,"Archtectural Design, Architectural Optimization",Architectural,Cloud,Design,,,,,,,,,,,
LI3HIYWS,Green: A framework for supporting energy-conscious programming using controlled approximation,"Paper proposes a framework for energy-aware computing by allowing programmers declare approximate versions of functions and an allowed QoS degradation for loops to substitute expensive loops and functions by less expensive ones without dropping the QoS below the allowed QoS degradation. They do so in two phases, a calibration phase in which a QoS model is constructed by measuring the use of the approximate functions and loops vs. the drop in QoS, and an approximation phase which uses the model built during the calibration phase at runtime to improve energy efficiency.",Dynamic,Optimization,"Approximate Computing, Programming Language, Dynamic Optimization",Code,Agnostic,"Design, Implementation",,,,,,,,,,,
LSBAJWP4,Investigating the effect of design patterns on energy consumption,"Paper investigates the effect of two GoF patterns, template method and state/strategy, and their alternative implementations on energy consumption, as well as the pattern-related parameters that might influence this effect. Paper finds that in aproximately 79% of the cases, the alternative solutions to GoF design patterns are more energy efficient than the GoF version (24.43% for Template Method and 55.51% for Strategy). However, the authors find that the higher the source line of code and method calls of a design pattern the less advantageous the alternative solutions. ",Static,Optimization,"Design Pattern Optimization, StaticOptimization",Design,Agnostic,Implementation,,,,,,,,,,,
M6QR5AHA,Differences of energetic consumption between Java and JNI Android apps,"Paper analyzes the energy consumption of android multithreaded applications running only in Java vs those that run computationally intensive sections of code in C through the Java Native Interface. Paper finds that executing native code within Java saves energy independently of whether multithreading is used or not. However, multithreading of an application does not make a big difference regarding energy efficiency.",Static,Optimization,"Execution Environments, Multithreading Optimizations",Architectural,Mobile,Implementation,,,,,,,,,,,
MNKBE98K,Towards automatic significance analysis for approximate computing,"Paper uses significance analysis, the classification of sections of an application's source code based on the influence they have on the final computation of a program, to increase energy efficiency of an application that computes a scalar result. The authors do this based on a framework that programmers can use to annotate their code based on the tasks each code section performs. It then computes the significance analysis on the tasks specified by the programmer and approximates the least siginificant sections to increase the energy efficiency of the application.",Dynamic,Optimization,"Staticanalysis, approximate computing, code annotation",Code,Agnostic,Implementation,,,,,,,,,,,
MP459RVF,Measuring application software energy efficiency,"Paper proposes an apporach to measure energy consumption at the application level, and investigates factors that contribute to the energy efficiency of applications.",Dynamic,Monitoring,"Application Level Measurment, Energy Efficiency Techniques",Architectural,Workstation,Verification,,,,,,,,,,,
MP459RVF,,,Static,Optimization,,Code,Agnostic,Implementation,,,,,,,,,,,
MT89KSP5,Green software architectures: A market-based approach,"Paper proposes a framework to manage software systems which introduces a standalone architectural layer for self-managing power consumption. It does so by optimizes energy utilization of a runtime architectural instance by dynamically monitoring and matching the resource requirements (demand) with the resource availability (supply) in relation to various scalability scenarios. The authors do so by introducing a supply manager that deals with the resource availability of a software system (such as nodes in a cluster) and a demand manager that deals with the resource requierements of the software system (such as incoming requests per second). The authors then propose a supply/demand coordinator, that ensures the demand and supply of resource availability and requirements are in equilibrium. A strategic planner then produces change management plans depending on whether the system is underperforming or overperforming.",Dynamic,Optimization,Dynamic Optimization,Architectural,Cloud,Implementation,,,,,,,,,,,
MVFWKW7Q,A process for analysing the energy efficiency of software,Paper proposes a specific process and guidelines to perform a case study to measure the energy efficient of a software system that integrates all the activities necessary to measure and analyse the energy consumption of the software evaluated.,Dynamic,Monitoring,"Software consumption measurement, energy consumption measurement process",Architectural,Agnostic,Verification,,,,,,,,,,,
MXC33NQL,Architectural Tactics to Optimize Software for Energy Efficiency in the Public Cloud,"Paper proposes several tactics for cloud users (developers, architects) to reduce the energy consumption of their public cloud usage. The authors present both Staticoptimization strategies, such as using edge computing, and dynamic optimization strategies such as using auto-scaling.",Static,Optimization,"StaticOptimization, Dynamic Optimization, Measurement",Architectural,Cloud,Design,,,,,,,,,,,
MY8FDDML,Removing Decorator to Improve Energy Efficiency,Paper proposes to eliminate the decorator design pattern to improve the energy consumption of Java applications,Static,Optimization,"Refactoring, Software Design",Design,Agnostic,Maintenance,,,,,,,,,,,
N6B6VC4R,Phone2Cloud: Exploiting computation offloading for energy saving on smartphones in mobile cloud computing,"Paper proposes a computational offloading technique for mobile phones that in addition to considering input size, bandwidth, CPU workload it also considers a user’s delay-tolerance threshold.",Dynamic,Optimization,"Computation offloading, Energy Aware Computing",Architectural,Mobile,Design,,,,,,,,,,,
NDDAZBX9,Deep parameter optimisation on android smartphones for energy minimisation: a tale of woe and a proof-of-concept,Paper proposes using an automatic aproximate programming technique using deep parametization that decides on the quality degradation based on a test suite that ensures the approximation does not fall outside of the quality degradation. ,Static,Optimization,"Refactoring, Approximate Computing, Genetic Improvements, StaticOptimization",Code,Mobile,Design,,,,,,,,,,,
NE83TEBM,Energy consumption and efficiency in mobile applications: A user feedback study,"Paper investigates user comments on Google Play market place for android applications to find which are the most common causes for energy inefficiency. The paper also proposes solutions to the most recurrent problems, but does not go into detail on them.",Static,Optimization,Refactoring,Code,Mobile,Maintenance,,,,,,,,,,,
NEG9D9ZD,Analysis of energy consumption and optimization techniques for writing energy-efficient code,"Paper analyzes the authors previous code level recommendations in the C++ language to improve performance, but from an energy efficiency perspective. They recommend several code level implementation details that increase energy efficiency.",Static,Optimization,Energy efficient code,Code,Agnostic,Implementation,,,,,,,,,,,
NPP5P5MB,${$AppScope$}$: Application Energy Metering Framework for Android Smartphone Using Kernel Activity Monitoring,"Paper proposes AppScope, a measuring tool for Android mobile phones that measure the energy consumption of hardware components of the phone used by the application.",Dynamic,Monitoring,"System Call Measuring, Hardware Usage by Application",Architectural,Mobile,Verification,,,,,,,,,,,
PCMY4PCB,Code Smell Refactoring for Energy Optimization of Android Apps,"Paper proposes to refactor god class first, then feature envy, and at last, long method to increase the energy consumption of applications that have a medium impact on energy consumption.",Static,Optimization,Refactoring,"Design, Code",Mobile,Maintenance,,,,,,,,,,,
PNH7EFHR,Greenoracle: Estimating software energy consumption with energy measurement corpora,"Paper presents an energy consumption model that can estimate software energy consumption mostly within 10% error. The authors do so by profiling 984 versions from 24 different Android applications and creating an energy model that take system call traces and cpu usage into account. A developer can create a unit test for their mobile application, capture the system call traces, cpu usage and relevant information, and use the model proposed to estimate the energy consumption of the test.This way developers do not have to train their own models to find the energy usage of their application.",Dynamic,Monitoring,"Software Metrics, Energy Models, StaticAnalysis",Architectural,Mobile,Verification,,,,,,,,,,,
PSP8YZTG,"Program energy efficiency: The impact of language, compiler and implementation choices","Paper compares the choice of languages, data structures, and compiler flag optimization to improve the energy efficiency of application software. Paper finds that although C/C++ are more energy efficient than Java, Java is more energy efficiency when complex memory allocation takes place. Paper also finds that malloc is more energy efficient than the new directive and that the -O2 and -O3 are more energy efficient than the -O1 flag. ",Static,Optimization,"Code Optimization, Data Structure Optimization",Architectural,Agnostic,Design,,,,,,,,,,,
PSP8YZTG,,,Static,Optimization,,Code,Agnostic,Implementation,,,,,,,,,,,
QEN7UH85,Estimating software energy consumption with machine learning approach by software performance feature,"Paper proposes a machine learning approach to classify the energy efficiency of software based on performance features. The model decrypt the composition of the energy consumption of an application, it gives the features of the program related to the energy consumption, and it gives the relevant parameters to the programmer.",Dynamic,Monitoring,"Measuring, Machine Learning",Architectural,Agnostic,Verification,,,,,,,,,,,
QKX9UAJY,Fine-grained power management using process-level profiling,"Paper proposes a measuring framework that measures energy consumption at the Windows process level by using four energy models (cpu, memory, disk, network) to estimate the energy consumption and the power of four main components. and provides that information as an API for developers to use. Using this framework, the authors propose a system module that eliminates wasted energy by abnormal applications. Although this module falls outside of application level software, the measuring framework does fall within application level software.",Dynamic,Monitoring,"System Process Models, Energy Consumption Models, Application Level Measuring, Energy Aware Computing, API, Dynamic Measuring",Architectural,Agnostic,Verification,,,,,,,,,,,
QKX9UAJY,,,Dynamic,Optimization,,Code,Agnostic,Implementation,,,,,,,,,,,
QRF2VWTV,Energy efficient data encryption techniques in smartphones,"Paper analyzes the energy consumption of several encryption algorithms such as AES, Blowfish, AES–Blowfish, Blowfish–AES and XTS–AES.",Static,Optimization,Encryption,Code,Agnostic,Implementation,,,,,,,,,,,
R2FNZSWN,Investigating the Impact of Code Refactoring Techniques on Energy Consumption in Different Object-Oriented Programming Languages,Paper proposes to use the extract method to improve the energy efficiency of applications written in several languages,Static,Optimization,Refactoring,Code,Agnostic,Maintenance,,,,,,,,,,,
R3CPADII,Greenminer: A hardware based mining software repositories software energy consumption framework,"Paper proposes a hardware based software repository mining tool to measure the energy consumption of mobile applications hosted in software repositories. It does so by providing a web service in which developers specify their tests, their application and the software versions, and test their mobile application's code through software changes.",Dynamic,Monitoring,"Hardware Based Measuring, Mining Software Repositories",Architectural,Mobile,Verification,,,,,,,,,,,
RL4Q2U3X,An Automated Code Optimizer of Design Patterns for Reducing Energy Usage in Green Computing,Paper proposes a tool that automatically optimizes design patterns into an energy efficiency version based on energy efficient transformation rules.,Static,Optimization,Code Optimization,Design,Agnostic,Maintenance,,,,,,,,,,,
S2IRVNC6,A study of energy-aware implementation techniques: Redistribution of computational jobs in mobile apps,"Paper analyzes the energy consumption of methods under different execution scopes of the Android OS runtime (java, native code, or C outside of the JVM). In addition, the authors also test the methods energy consumption in an external server and compares it to the local execution environments. Paper finds that executing C code outside of the JVM is the most energy efficient in most of the cases executed locally, while offloading to a server is the most energy efficient overall.",Static,Optimization,"Execution Environments, Programming Language Features, Computation Offloading",Architectural,Mobile,Implementation,,,,,,,,,,,
S5BDSYDG,An Aspect Oriented Model for Software Energy Efficiency in Decentralised Servers.,"Paper proposes using aspect oriented programming, a component-based approach to the implementation of crosscutting concerns, repeatable tasks that occur throughout a program, in order to increase the energy efficiency of software.",Static,Optimization,"Energy Aware Programming, Dynamic Optimization",Design,Cloud,Implementation,,,,,,,,,,,
SJ37G2UP,What is keeping my phone awake? Characterizing and detecting no-sleep energy bugs in smartphone apps,"Paper proposes a framework that can detect the no-sleep energy bug in mobile application's source code. The authors also do a study on the characteristics of this bug, and perform experimentation on the detection and removal of the bug. The framework analyzes an application's source code, and detects energy bugs which a developer can then fix. They find that the most prominent form of no-sleep bugs comes from developers not specifying a wakelock release at all or at the appropriate events, or the source code taking a path where no wakelock release is used. Other causes of wakelock bugs include an application having a wakelock at a global level, and race conditions.",Static,Optimization,"Energy Bug Refactoring, StaticOptimization",Code,Mobile,Maintenance,,,,,,,,,,,
SPWLZ6BY,Energy efficient software development life cycle-An approach towards smart computing,"Paper proposes embedding every stage of the software development lifecycle with an energy efficiency focus. After each stage, a green analysis is done to ensure that the product from that stage is environmentally friendly.",Static,Optimization,Software Development Lifecycle,"Architectural, Design, Code",Agnostic,"Requirements, Design, Implementation, Verification, and Maintenance",,,,,,,,,,,
SXUACNPF,Understanding energy behaviors of thread management constructs,"Paper analyzes the relationship between thread management construct and energy consumption. The paper also analyzes how different turning knobs in the Java programming language impact energy consumption. The paper finds that different thread management constructs have different impacts on energy consumption depending on the nature of the application they are being applied to. For IO-bound programs, the Thread style incurs the least energy consumption, whereas the ForkJoin style has the most. For embarrassingly parallel benchmarks, the opposite holds. The paper also finds that sequential execution often leads to the least energy consumption, whereas parallel execution leads to improved energy/performance trade-off for nonembarassingly-serial programs. For data-centric division, asymmetric workloads in ForkJoin are more energy-friendly, and excessive forking width can lead to increased energy consumption. For data size, the authors find that data size has non-linear impact on energy consumption. They also find that performance is closely related to energy consumption in the presence of data size variations, but the two do not follow identical trajectories. Significant data copying leads to increased energy consumption, but its relative effect is often smaller than the performance loss it imposes. Data locality plays an important role in the energy consumption of multi-threaded programs.",Static,Optimization,Multithreading Optimization,Code,Agnostic,Implementation,,,,,,,,,,,
T35M4IVQ,Process-level power estimation in vm-based systems,"Paper proposes an energy agnostic mesaurement framework that can estimate the energy consumption of applications running at any level of virtualization in a system. BittWatts performs well in both distributed and single core settings, and can measure the energy consumption of distributed applications.",Dynamic,Monitoring,,Architectural,Cloud,Verification,,,,,,,,,,,
TEJY8MU2,Time-and-energy-aware computation offloading in handheld devices to coprocessors and clouds,"Paper proposes a framework that compares energy consumption vs perfomance requirements of executing android modules (libraries or components) at various execution environments (cpu, gpu, cloud) and decides at runtime the best environment to execute them. The authors do so by measuring the Static(mobile power consumption,coprocessor speed, memory usage ) and dynamic (input size, output size) energy consumption and performance, in addition to outside factors like bandwith consumption, of an application in various execution environements and creates cost tables for each exexution environment. The framework can then compare the cost tables and decide at runtime the best environment to execute each module. ",Dynamic,Optimization,"Dynamic Optimization, Computational Offloading, StaticAnalysis, Dynamic Analysis",Architectural,Mobile,Implementation,,,,,,,,,,,
TFPBHQPQ,Greenadvisor: A tool for analyzing the impact of software evolution on energy consumption,Paper proposes a technique to analyze system calls of different git commits of a software proyect to predict how the energy consumption of the new software version will compare to that of the previous version.,Static,Monitoring,"StaticMeasuring, System Calls, Commit Analysis",Code,Mobile,Verification,,,,,,,,,,,
TKSV4V8X,Optimising energy consumption of design patterns,"Paper proposes transformations to the Observer and Decorator patterns to increase their energy efficiency. Although the paper proposes to use this transformation patterns at the compilation level, in this paper they apply the patterns directly to the source code of github applications.",Static,Optimization,"StaticOptimization, Design Pattern Optimization, Design Level Refactoring",Design,Agnostic,Maintenance,,,,,,,,,,,
TN6IQC7E,Tools supporting green computing in Erlang,"Paper proposes a tool that can estimate the energy consumption of erlang programs at runtime. The tool measures the energy consumption by running the source code of the specified module and using the RAPL measurement tool for intel processors to measure the energy consumed during the execution. The authos then measure the energy consumption of different data-structure implementations, high order functions, parallel language elements, and algorithmic skeletons. They then compare the energy efficiency of the same code under different compilers, and propose refactorings based on their findings. ",Dynamic,Monitoring,"Dynamic Analysis, Runtime Measurements, Source Code Refactorings",Code,Workstation,Verification,,,,,,,,,,,
TN6IQC7E,,,Static,Optimization,,Code,Agnostic,Maintenance,,,,,,,,,,,
TSMJCEQN,Toward using software metrics as indicator to measure power consumption of mobile application: A case study,"Paper analyzes 18 different software metrics such as the McCave cyclomatic complexity, number of parameters, nested block depth between others, and finds metrics that have a correlation to the energy consumption of software. They do this to aid developers identifying the energy consumption of their applications before they reach production and the cost of refactoring increases.  ",Static,Monitoring,"Measruring, Software Metrics",Code,Mobile,Verification,,,,,,,,,,,
TSQNKEX2,Energy Efficient Software Development Techniques for Cloud based Applications,Paper proposes adding an extra stage to the software development lifecycle that measures the energy consumption of code in cloud applications.,Dynamic,Monitoring,"Green SDLC, Hot Spot Testing",Architectural,Cloud,Verification,,,,,,,,,,,
TSQNKEX2,,,Dynamic,Monitoring,,Design,Cloud,Verification,,,,,,,,,,,
TSQNKEX2,,,Dynamic,Monitoring,,Code,Cloud,Verification,,,,,,,,,,,
U2KEHF3V,Understanding the impact of object oriented programming and design patterns on energy efficiency,Paper performs an analysis of different OOP features and design patterns on their energy consumption and finds design patterns that decrease energy consumption. They find that overloading and the decorator pattern highly increase the energy consumption of an application while the flyweight pattern increases the energy efficiency and performance of an application.,Static,Optimization,Design Patterns,Design,Agnostic,Implementation,,,,,,,,,,,
UHQWKP93,Greening an existing software system using the GPU,Paper proposes migrating existing software systems that are computing intensive to the GPU to increase energy effciency. The authors find that adapting a software application to run in the GPU can produce 13% in energy savings.,Static,Optimization,"Software Migration, GPU computing",Architectural,Agnostic,Maintenance,,,,,,,,,,,
ULKD3R3F,Jolinar: analysing the energy footprint of software applications,"Paper proposes Jolinar, an energy consumption measuring software that extends the existing PowerApi system library tool and builds on top of energy models to provide an accurate, light and easy-to-use interface for energy measurements. This tool lets developers measure the energy consumption of their entire application. This tool also provides a graphic interface so end-users can also measure their mobile applications energy efficiency.",Dynamic,Monitoring,"Application Energy Consumption Measuring, Energy Consumption Models, Testing",Architectural,Workstation,Verification,,,,,,,,,,,
UWBD8DUZ,Investigating the correlation between performance scores and energy consumption of mobile web apps,Paper proposes to use Google's Lighthouse web performance service to increase the energy efficiency of their mobile web apps given that the researches find a negative correlation of medium and large effect between performance of a web application and energy consumption. Developers can use such a score as a low-cost alternative for preliminary insights also about its energy consumption.,Dynamic,Monitoring,"Measuring, Software Metrics, Testing",Code,Cloud,Verification,,,,,,,,,,,
V74XCRN7,Optimizing energy consumption of guis in android apps: A multi-objective approach,"Paper proposes a multi-objective technique to generate color compositions that reduce the energy consumption of GUIs in Android apps and are visually attractive at the same time. The paper uses pixel-engineering, power-models, color theory, dynamic analysis and genetic algorithms to create a pareto-optimal color set.",Static,Optimization,"GUI, Color Palette Optimization, Screen Energy Saving, Genetic Algorithm",Architectural,Mobile,Design,,,,,,,,,,,
VABHQVAY,Seflab: A lab for measuring software energy footprints,Paper proposes a methology to measure software applications at runtime by creating a measurement lab that allows measuring the energy dissipation of the entire hardware system.,Dynamic,Monitoring,"Dynamic Measurments, Application Level Measurements",Architectural,Workstation,Verification,,,,,,,,,,,
WCP7LAPJ,On the impact of code smells on the energy consumption of mobile applications,"Paper finds that the code smells Internal Setter, Leaking Thread, Member Ignoring Method, and Slow Loop increase energy consumption up to 87 times compared to other code smells. The authors also find that refactoring these code smells improve energy efficiency in all situations.",Static,Optimization,Code Smell Refactoring,Code,Mobile,Maintenance,,,,,,,,,,,
WD2TZU2M,Early analysis of resource consumption patterns in mobile applications,"Paper proposes a conceptual framework to estimate the energy efficiency of a mobile application before implementing it, aiding developers during the architectural decision process. It does so by identifying the commonest operations of these architectures and measuring their energy consumption. The most common functionalities of an app can be composed of these primitive operations and their energy consumption can be extrapolated through them.",Static,Monitoring,"Resource estimation, architectural decision framework",Architectural,Mobile,Design,,,,,,,,,,,
WDMGKU7Q,Automated Refactoring for Energy-Aware Software,Paper proposes to investigate software patterns and code smells that improve the energy efficiency of software.,Static,Optimization,"Refactoring, Design Patterns",Design,Agnostic,Design,,,,,,,,,,,
WDMGKU7Q,,,Static,Optimization,,Code,Agnostic,Maintenance,,,,,,,,,,,
WJWP6D4S,Understanding green software development: A conceptual framework,Paper proposes a conceptual framework that provides an high-level view over the possible strategies for developing energy efficient software. It proposes a design strategy to implement different techniques of energy efficient software such as refactoring or energy aware computing (between others) together with measuring of the strategies.,Static,Optimization,"Software Design, SDLC",Architectural,Agnostic,Design,,,,,,,,,,,
WKB2W4CI,Energy efficient data sorting using standard sorting algorithms,Paper proposes using different sorting algorithms at runtime depending on the input and user need. They do this by first profiling sorting algorithms via trend functions and then use a dynamic optimization approach that changes the used implementation at runtime. The authors find that the adaptive strategy strikes a balance between energy-efficiency and performance.,Dynamic,Optimization,"Energy-aware computing, algorithm implementation",Code,Mobile,Implementation,,,,,,,,,,,
WSRMLBPA,Monitoring energy hotspots in software,"Paper proposes a measuring framework, e-surgeon that combines two approaches, an system monitoring library that measures the energy consumption of hardware components and from through bytecode statistical sampling.",Dynamic,Monitoring,Software Based Measuring,Code,Agnostic,Verification,,,,,,,,,,,
WSRMLBPA,,,Static,Monitoring,,Code,Agnostic,Verification,,,,,,,,,,,
X4C8FVY7,Predicting data structures for energy efficient computing,"Paper explores how different implementations of the same interface affect the energy efficiency of application software, the paper adapts these classes through machine learning tools to make them energy aware, so that the classes can dynamically adapt to produce the optimal energy efficiency.",Dynamic,Optimization,"Machine Learning, Green Data Structures",Code,Agnostic,Implementation,,,,,,,,,,,
X4SLRU4W,Share sens: An approach to optimizing energy consumption of continuous mobile sensing workloads,"Paper introduces an Android API so that programmer's sensor requests are bundled with sensing requests of other applications, leading to more energy efficient code.",Dynamic,Optimization,"Hardware/Software Interfaces, Sensor Management API",Architectural,Mobile,Design,,,,,,,,,,,
XBNH9NN5,Code-level Optimization for Program Energy Consumption,"Paper proposes to eliminate the dead write, the common inefficient memory access of having two successive writes to a memory location without an intervening read, to increase the energy efficiency of applications.",Static,Optimization,"Refactoring, StaticOptimization",Code,Agnostic,Maintenance,,,,,,,,,,,
XSNECSAB,Catalog of energy patterns for mobile applications,"Paper analyzes github commits of open source mobile applications to find energy efficiency patterns. The authors find 22 patterns that can be used to increase the energy efficiency of mobile applications, and provide context, a solution and an example to each pattern. The patterns however are not tested for their energy efficiency improvement. ",Static,Optimization,"Refactoring, Design Patterns, Commit Analysis",Design,Mobile,Implementation,,,,,,,,,,,
XUTI2HG8,Empirical evaluation of two best practices for energy-efficient software development,"Paper evaluates two industry best practices for reducing the energy consumption of applications, query optimization in MySQL Server and usage of “sleep” instruction in the Apache web server. The authors find that one can save up to 25% in energy consumption by following these two best practices.",Static,Optimization,"Code Optimization, SQL Optimization",Code,Workstation,Implementation,,,,,,,,,,,
XX5522G7,Green Patterns of User Interface Design: A Guideline for Sustainable Design Practices,Paper proposes guidelines to reduce energy consumption of software products through User Interface design.,Static,Optimization,"GUI Green Patterns, ",Design,Cloud,Design,,,,,,,,,,,
Y2YHD6TU,Initial explorations on design pattern energy usage,"Paper proposes a hardware rig to measure the energy consumption of applications. They also make an investigation into which design patterns are the most energy efficient. The paper finds several design patterns that save energy efficiency. The authors also find that there might be some correlation between energy consumption and object instantiation, although they do not explore the subject more in depth",Dynamic,Monitoring,"Energy Efficient Design Patterns, Hardware Based Measuring",Architectural,Agnostic,Verification,,,,,,,,,,,
Y2YHD6TU,,,Static,Optimization,,Design,Agnostic,Design,,,,,,,,,,,
YXRUR287,Understanding the impact of cloud patterns on performance and energy consumption,"Paper analyzes the energy consumption of different cloud patterns such as local sharding based routers, local database proxy, priority message queue, competing consumers, gatekeeper, and pipes and filters. The authors find that the Local Database Proxy, Priority Message queue, and pipes and filters patterns increases energy efficiency of a cloud application. The paper also compares monolithic based architectures vs micro-services based architectures, and finds that micro-service based architectures are more energy efficient than monolithic architectures and recommends migrating monolithich architectures to microservices.",Static,Optimization,Cloud Architectural Patterns,Architectural,Cloud,Implementation,,,,,,,,,,,
Z2IUW42Q,"Software optimization for performance, energy, and thermal distribution: Initial case studies","Paper proposes energy measurement guidelines and an energy estimation model from software metrics to measure multicore applications. The measuring is done dynamically, and the estimation is done Statically based on software metrics. The paper also proposes using proper parallelization techniques, and parameter tunning to increase the energy efficiency of multithreaded software. The paper also proposes to manage the temperature at which the system runs to further save energy.",Dynamic,Monitoring,"StaticAnalysis, Dynamic Measurments,  StaticOptimization",Architectural,Workstation,Verification,,,,,,,,,,,
Z2IUW42Q,,,Static,Monitoring,,Architectural,Workstation,Verification,,,,,,,,,,,
Z2IUW42Q,,,Static,Optimization,,Design,Agnostic,Implementation,,,,,,,,,,,
ZARPMKH3,Making web applications more energy efficient for OLED smartphones,"Paper proposes a new technique for automatically transforming the color scheme of a mobile web application. They perform Staticanalysis to model the pages that can be generated by the webserver, and using that information it generates relationships between the color pallet of the site. It then proposes a minimization problem whose solution is a color scheme which is similar to the one used in the application. They then use simulated annealing to generate a color scheme that is both energy efficient and similar to the original colors",Static,Optimization,"Refactoring, GUI, Screen Energy Optimization, Code Optimization",Architectural,Cloud,Maintenance,,,,,,,,,,,
ZC77Q3ZT,Assessment of rest and websocket in regards to their energy consumption for mobile applications,"Paper compares the energy consumption of REST vs Websocket protocols on a mobile application. The authors find that REST consumes more energy than WebSocket, and that a continuous connect and disconnect consumes more energy then a standing connection.",Static,Optimization,,Architectural,Mobile,Design,,,,,,,,,,,
ZSJ2LGWL,How to measure energy-efficiency of software: Metrics and measurement results,"Paper proposes a white box measurement to tell in which part of software there is potential for energy savings. The paper does so by measuring ""useful work/used energy"" that varies between applications.",Dynamic,Monitoring,Measuring,"Design, Code",Agnostic,Verification,,,,,,,,,,,
ZTXVCAIZ,Energy types,"Paper presents Energy Types, a practical type system to reason about energy-aware software. The paper embedds phases energy phases and modes, two recurring motifs in modern energy-aware software, into the programming language, ensuring the programmer is aware of how their application must behave in different energy contexts. The programming language then applies DVFS depending on the energy phases and modes defined by the programmer.",Dynamic,Optimization,"Programming Language, Hardware/Software Interfaces, Approximate Programming",Architectural,Mobile,Design,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,
,,Tactic Characteristics,Dynamic,Static,Total,,,,,,,,,,,Abstraction Layer,,Target Platform,
,,Monitoring,42,11,53,,,,,,,,,,,Code,76,Agnostic,68
,,Optimization,25,85,110,,,,,,,,,,,Architectural,67,Mobile,67
,,Total,42,11,53,,,,,,,,,,,Design,29,Cloud,17
,,,,,,,,,,,,,,,,Total,172,Workstation,11
,,Tactic Abstraction Level,Dynamic Optimization,Dynamic Monitoring,Static Optimization,Static Monitoring,Total,,Tactic Abstraction Level,Architectural,Design,Code,Total,,,,,Total,135
,,Architectural,13,25,26,3,67,,Dynamic Optimization,13,1,11,25,,,,,,
,,Design,1,3,24,1,29,,Dynamic Monitoring,25,3,15,43,,,Tactic Software Development Stages,,,
,,Code,11,15,43,7,76,,Static Optimization,26,24,43,93,,,Verification,51,,
,,Total,25,43,93,11,172,,Static Monitoring,3,1,7,11,,,Implementation,50,,
,,,,,,,,,Total,67,29,76,172,,,Design,39,,
,,Tactic Software Development Stage,Dynamic Optimization,Dynamic Monitoring,Static Optimization,Static Monitoring,Total,,,,,,,,,Maintenance,26,,
,,Requirements,0,0,6,0,6,,,,,,,,,Requirements,6,,
,,Design,14,0,23,2,39,,,,,,,,,Total,65,,
,,Implementation,12,1,37,0,50,,,,,,,,,,,,
,,Verification,0,41,1,9,51,,,,,,,,,,,,
,,Maintenance,0,0,26,0,26,,,,,,,,,,,,
,,Total,26,42,93,11,172,,,,,,,,,,,,